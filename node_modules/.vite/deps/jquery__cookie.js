import {
  require_jquery
} from "./chunk-VEIX3L4A.js";
import {
  __commonJS
} from "./chunk-HKJ2B2AA.js";

// node_modules/jquery.cookie/jquery.cookie.js
var require_jquery_cookie = __commonJS({
  "node_modules/jquery.cookie/jquery.cookie.js"(exports) {
    (function(factory) {
      if (typeof define === "function" && define.amd) {
        define(["jquery"], factory);
      } else if (typeof exports === "object") {
        factory(require_jquery());
      } else {
        factory(jQuery);
      }
    })(function($) {
      var pluses = /\+/g;
      function encode(s) {
        return config.raw ? s : encodeURIComponent(s);
      }
      function decode(s) {
        return config.raw ? s : decodeURIComponent(s);
      }
      function stringifyCookieValue(value) {
        return encode(config.json ? JSON.stringify(value) : String(value));
      }
      function parseCookieValue(s) {
        if (s.indexOf('"') === 0) {
          s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\");
        }
        try {
          s = decodeURIComponent(s.replace(pluses, " "));
          return config.json ? JSON.parse(s) : s;
        } catch (e) {
        }
      }
      function read(s, converter) {
        var value = config.raw ? s : parseCookieValue(s);
        return $.isFunction(converter) ? converter(value) : value;
      }
      var config = $.cookie = function(key, value, options) {
        if (value !== void 0 && !$.isFunction(value)) {
          options = $.extend({}, config.defaults, options);
          if (typeof options.expires === "number") {
            var days = options.expires, t = options.expires = /* @__PURE__ */ new Date();
            t.setTime(+t + days * 864e5);
          }
          return document.cookie = [
            encode(key),
            "=",
            stringifyCookieValue(value),
            options.expires ? "; expires=" + options.expires.toUTCString() : "",
            // use expires attribute, max-age is not supported by IE
            options.path ? "; path=" + options.path : "",
            options.domain ? "; domain=" + options.domain : "",
            options.secure ? "; secure" : ""
          ].join("");
        }
        var result = key ? void 0 : {};
        var cookies = document.cookie ? document.cookie.split("; ") : [];
        for (var i = 0, l = cookies.length; i < l; i++) {
          var parts = cookies[i].split("=");
          var name = decode(parts.shift());
          var cookie = parts.join("=");
          if (key && key === name) {
            result = read(cookie, value);
            break;
          }
          if (!key && (cookie = read(cookie)) !== void 0) {
            result[name] = cookie;
          }
        }
        return result;
      };
      config.defaults = {};
      $.removeCookie = function(key, options) {
        if ($.cookie(key) === void 0) {
          return false;
        }
        $.cookie(key, "", $.extend({}, options, { expires: -1 }));
        return !$.cookie(key);
      };
    });
  }
});
export default require_jquery_cookie();
/*! Bundled license information:

jquery.cookie/jquery.cookie.js:
  (*!
   * jQuery Cookie Plugin v1.4.1
   * https://github.com/carhartl/jquery-cookie
   *
   * Copyright 2013 Klaus Hartl
   * Released under the MIT license
   *)
*/
//# sourceMappingURL=jquery__cookie.js.map
